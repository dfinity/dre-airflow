name: Update k8s deployments
description: Reusable action for updating k8s deployments

inputs:
  files_to_update:
    description: "A space-separated list of files to update"
    required: true
  component:
    description: "Which component to update"
    required: true

runs:
  using: composite
  steps:
    # The GitHub App token is necessary for pushing changed files back to the repository
    # If regular secrets.GITHUB_TOKEN is used instead, the push will not trigger any actions
    # https://github.com/orgs/community/discussions/25702
    - name: Create GitHub App Token
      uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
        private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}

    - name: "Update k8s deployment"
      id: "update_k8s"
      env:
        GITHUB_API_TOKEN_FOR_K8S: ${{ steps.app-token.outputs.token }}
        FILES: ${{ inputs.files_to_update }}
        COMPONENT: ${{ inputs.component }}
      shell: bash
      run: |
        set -eExou pipefail

        tmpdir=$(mktemp)
        trap 'rm -rf "$tmpdir"' EXIT

        # checkout branch
        git clone --depth 10 --branch "main" "https://${GITHUB_API_TOKEN_FOR_K8S}@github.com/dfinity-ops/k8s.git"

        cd k8s
        git config user.email "idx@dfinity.org"
        git config user.name "IDX Automation"
        SOURCE_BRANCH="${{ github.head_ref || github.ref_name }}"
        K8S_REPO_BRANCH="update-dre-airflow-$COMPONENT-images-$SOURCE_BRANCH"
        git checkout -b "${K8S_REPO_BRANCH}"

        # Update the refs in the requested files.
        # Refs are assumed to be named sha-[0-9a-f]+.
        sed -i "s~:sha-[a-f0-9]\{40\}\$~:sha-${GITHUB_SHA}~g" $FILES

        # commit changes if there are any
        git add .
        if git diff --cached --quiet; then
          echo "No changes to commit."
          exit 0
        fi

        # Push changes and create a new merge request
        git commit -m "New $COMPONENT release from $SOURCE_BRANCH branch"
        git push \
          --force --set-upstream origin "${K8S_REPO_BRANCH}" || \
          git push --force --set-upstream origin "${K8S_REPO_BRANCH}"

        echo "k8s_branch=$K8S_REPO_BRANCH" >> $GITHUB_OUTPUT
        echo "source_branch=$SOURCE_BRANCH" >> $GITHUB_OUTPUT

    - name: "Create PR on k8s repository"
      if: ${{ steps.update_k8s.outputs.k8s_branch != '' }}
      uses: actions/github-script@v7
      continue-on-error: true
      with:
        github-token: ${{ steps.app-token.outputs.token }}
        script: |
          const result = await github.rest.pulls.create({
            title: '[nomrbot] - New ${{ inputs.component }} release from the dre-airflow repo',
            owner: 'dfinity-ops',
            repo: 'k8s',
            head: '${{ steps.update_k8s.outputs.k8s_branch }}',
            base: 'main',
            body: 'Updating container images based on the latest changes in [this repository](https://github.com/dfinity/dre-airflow/commits/${{ steps.update_k8s.outputs.source_branch }})'
          });
