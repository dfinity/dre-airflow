#!/bin/bash -e

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
VENV_DIR=$( dirname "$SCRIPT_DIR" )/venv
export AIRFLOW_HOME=$( dirname "$SCRIPT_DIR" )/airflow
export PYTHONPATH=$(dirname "$SCRIPT_DIR")/shared

if [ "$1" == "setup" ]
then
    python3.11 -m venv "$VENV_DIR"
    "$VENV_DIR"/bin/pip3 install "apache-airflow[celery]==2.9.1" \
        apache-airflow-providers-slack[common.sql] \
        apache-airflow-providers-google \
        --constraint https://raw.githubusercontent.com/apache/airflow/constraints-2.9.1/constraints-3.11.txt
    mkdir -p "$AIRFLOW_HOME"
    if ! test -f "$AIRFLOW_HOME"/airflow.db
    then
        PATH="$VENV_DIR/bin:$PATH" "$VENV_DIR"/bin/airflow db init
    fi
    pushd "$AIRFLOW_HOME"
    ln -sfT ../dags dags
    ln -sfT ../plugins plugins
    sed -i 's/reload_on_plugin_change.*/reload_on_plugin_change = True/' airflow.cfg
    sed -i 's/load_examples.*/load_examples = False/' airflow.cfg
    popd
fi

test -x "$VENV_DIR"/bin/airflow || {
    echo "The Airflow virtual environment is not set up at $VENV_DIR" >&2
    echo "Run this command with 'setup' as its only argument to set it up." >&2
    exit 32
}
test -f "$AIRFLOW_HOME"/airflow.cfg || {
    echo "Airflow has not been initialized at $AIRFLOW_HOME" >&2
    echo "Run this command with 'setup' as its only argument to initialize it." >&2
    exit 32
}

if [ "$1" == "check-setup" ]
then
    exit
fi

if [ "$1" == "setup" ]
then
    echo "Airflow is now successfully setup." >&2
    PATH="$VENV_DIR/bin:$PATH" "$VENV_DIR"/bin/airflow info >&2
    echo "You can now run this command with 'standalone' as its only argument." >&2
    echo "When you do that, note the admin password in the scrollback buffer -- you will need it to log in." >&2
    exit
fi

export AIRFLOW__CORE__ALLOWED_DESERIALIZATION_CLASSES_REGEXP="(dfinity|airflow).*"
export PATH="$VENV_DIR/bin:$PATH"
exec "$VENV_DIR"/bin/airflow "$@"
